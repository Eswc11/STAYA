{"ast":null,"code":"var _jsxFileName = \"/Users/leearthur/VScode/mmm/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, TextField, Button, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Paper, ThemeProvider, createTheme, Chip, Select, MenuItem, FormControl, InputLabel, Grid, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions, Checkbox, LinearProgress } from '@mui/material';\nimport { Delete as DeleteIcon, Add as AddIcon, Timer as TimerIcon, CheckCircle as CheckCircleIcon, RadioButtonUnchecked as UncheckedIcon, Category as CategoryIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3'\n    },\n    secondary: {\n      main: '#f50057'\n    },\n    background: {\n      default: '#f5f5f5'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          borderRadius: 12\n        }\n      }\n    }\n  }\n});\nconst categories = ['Reading', 'Writing', 'Math', 'Science', 'History', 'Other'];\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showTimerDialog, setShowTimerDialog] = useState(false);\n  const [timerMinutes, setTimerMinutes] = useState(25);\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n    } else if (timer === 0) {\n      setIsTimerRunning(false);\n      // You could add a notification here\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timer]);\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false,\n        category: selectedCategory || 'Other',\n        createdAt: new Date()\n      }]);\n      setNewTask('');\n      setSelectedCategory('');\n    }\n  };\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const handleToggleComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n  const startTimer = () => {\n    setTimer(timerMinutes * 60);\n    setIsTimerRunning(true);\n    setShowTimerDialog(false);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getProgress = () => {\n    if (tasks.length === 0) return 0;\n    const completedTasks = tasks.filter(task => task.completed).length;\n    return completedTasks / tasks.length * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            align: \"center\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: \"Study Task Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: getProgress(),\n            sx: {\n              height: 8,\n              borderRadius: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            align: \"center\",\n            sx: {\n              mt: 1\n            },\n            children: [tasks.filter(task => task.completed).length, \" of \", tasks.length, \" tasks completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                variant: \"outlined\",\n                placeholder: \"Add a new study task\",\n                value: newTask,\n                onChange: e => setNewTask(e.target.value),\n                onKeyPress: handleKeyPress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedCategory,\n                  label: \"Category\",\n                  onChange: e => setSelectedCategory(e.target.value),\n                  children: categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: category,\n                    children: category\n                  }, category, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleAddTask,\n                  startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 32\n                  }, this),\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => setShowTimerDialog(true),\n                  startIcon: /*#__PURE__*/_jsxDEV(TimerIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 32\n                  }, this),\n                  children: \"Timer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: [tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              sx: {\n                bgcolor: task.completed ? 'action.hover' : 'transparent',\n                borderRadius: 1,\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: task.completed,\n                onChange: () => handleToggleComplete(task.id),\n                icon: /*#__PURE__*/_jsxDEV(UncheckedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 27\n                }, this),\n                checkedIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 34\n                }, this),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: task.text,\n                secondary: task.category,\n                sx: {\n                  textDecoration: task.completed ? 'line-through' : 'none',\n                  color: task.completed ? 'text.secondary' : 'text.primary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 29\n                  }, this),\n                  label: task.category,\n                  size: \"small\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: () => handleDeleteTask(task.id),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)), tasks.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No tasks yet. Add your first study task above!\",\n                sx: {\n                  textAlign: 'center',\n                  color: 'text.secondary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showTimerDialog,\n        onClose: () => setShowTimerDialog(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Study Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              py: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: timer / (timerMinutes * 60) * 100,\n              size: 120,\n              thickness: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                mt: 2\n              },\n              children: formatTime(timer)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              label: \"Minutes\",\n              value: timerMinutes,\n              onChange: e => setTimerMinutes(Number(e.target.value)),\n              sx: {\n                mt: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowTimerDialog(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: startTimer,\n            disabled: isTimerRunning,\n            children: isTimerRunning ? 'Running...' : 'Start Timer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mRFldhmfnUDd8h53Ou1s3KGr9e4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","TextField","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Paper","ThemeProvider","createTheme","Chip","Select","MenuItem","FormControl","InputLabel","Grid","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","Checkbox","LinearProgress","Delete","DeleteIcon","Add","AddIcon","Timer","TimerIcon","CheckCircle","CheckCircleIcon","RadioButtonUnchecked","UncheckedIcon","Category","CategoryIcon","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","background","default","typography","fontFamily","components","MuiPaper","styleOverrides","root","borderRadius","categories","App","_s","tasks","setTasks","newTask","setNewTask","selectedCategory","setSelectedCategory","timer","setTimer","isTimerRunning","setIsTimerRunning","showTimerDialog","setShowTimerDialog","timerMinutes","setTimerMinutes","interval","setInterval","prev","clearInterval","handleAddTask","trim","id","Date","now","text","completed","category","createdAt","handleDeleteTask","taskId","filter","task","handleToggleComplete","map","handleKeyPress","event","key","startTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","getProgress","length","completedTasks","children","sx","bgcolor","minHeight","py","maxWidth","mb","variant","component","gutterBottom","align","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","height","color","mt","elevation","p","container","spacing","item","xs","sm","fullWidth","placeholder","onChange","e","target","onKeyPress","label","display","gap","onClick","startIcon","divider","checked","icon","checkedIcon","textDecoration","size","mr","edge","textAlign","open","onClose","flexDirection","alignItems","thickness","type","Number","disabled","_c","$RefreshReg$"],"sources":["/Users/leearthur/VScode/mmm/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Box, \n  Typography, \n  TextField, \n  Button, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemSecondaryAction,\n  IconButton,\n  Paper,\n  ThemeProvider,\n  createTheme,\n  Chip,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Checkbox,\n  LinearProgress\n} from '@mui/material';\nimport { \n  Delete as DeleteIcon, \n  Add as AddIcon,\n  Timer as TimerIcon,\n  CheckCircle as CheckCircleIcon,\n  RadioButtonUnchecked as UncheckedIcon,\n  Category as CategoryIcon\n} from '@mui/icons-material';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          borderRadius: 12,\n        },\n      },\n    },\n  },\n});\n\nconst categories = [\n  'Reading',\n  'Writing',\n  'Math',\n  'Science',\n  'History',\n  'Other'\n];\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showTimerDialog, setShowTimerDialog] = useState(false);\n  const [timerMinutes, setTimerMinutes] = useState(25);\n\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timer > 0) {\n      interval = setInterval(() => {\n        setTimer((prev) => prev - 1);\n      }, 1000);\n    } else if (timer === 0) {\n      setIsTimerRunning(false);\n      // You could add a notification here\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timer]);\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, { \n        id: Date.now(), \n        text: newTask, \n        completed: false,\n        category: selectedCategory || 'Other',\n        createdAt: new Date()\n      }]);\n      setNewTask('');\n      setSelectedCategory('');\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const handleToggleComplete = (taskId) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n\n  const startTimer = () => {\n    setTimer(timerMinutes * 60);\n    setIsTimerRunning(true);\n    setShowTimerDialog(false);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getProgress = () => {\n    if (tasks.length === 0) return 0;\n    const completedTasks = tasks.filter(task => task.completed).length;\n    return (completedTasks / tasks.length) * 100;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\n        <Container maxWidth=\"sm\">\n          <Box sx={{ mb: 4 }}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold' }}>\n              Study Task Manager\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getProgress()} \n              sx={{ height: 8, borderRadius: 4 }}\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 1 }}>\n              {tasks.filter(task => task.completed).length} of {tasks.length} tasks completed\n            </Typography>\n          </Box>\n          \n          <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={8}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Add a new study task\"\n                  value={newTask}\n                  onChange={(e) => setNewTask(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Category</InputLabel>\n                  <Select\n                    value={selectedCategory}\n                    label=\"Category\"\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                  >\n                    {categories.map((category) => (\n                      <MenuItem key={category} value={category}>\n                        {category}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <Box sx={{ display: 'flex', gap: 1 }}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleAddTask}\n                    startIcon={<AddIcon />}\n                  >\n                    Add Task\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => setShowTimerDialog(true)}\n                    startIcon={<TimerIcon />}\n                  >\n                    Timer\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <List>\n              {tasks.map((task) => (\n                <ListItem \n                  key={task.id} \n                  divider\n                  sx={{\n                    bgcolor: task.completed ? 'action.hover' : 'transparent',\n                    borderRadius: 1,\n                    mb: 1,\n                  }}\n                >\n                  <Checkbox\n                    checked={task.completed}\n                    onChange={() => handleToggleComplete(task.id)}\n                    icon={<UncheckedIcon />}\n                    checkedIcon={<CheckCircleIcon />}\n                    color=\"primary\"\n                  />\n                  <ListItemText \n                    primary={task.text}\n                    secondary={task.category}\n                    sx={{\n                      textDecoration: task.completed ? 'line-through' : 'none',\n                      color: task.completed ? 'text.secondary' : 'text.primary',\n                    }}\n                  />\n                  <ListItemSecondaryAction>\n                    <Chip\n                      icon={<CategoryIcon />}\n                      label={task.category}\n                      size=\"small\"\n                      sx={{ mr: 1 }}\n                    />\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => handleDeleteTask(task.id)}\n                      color=\"secondary\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n              {tasks.length === 0 && (\n                <ListItem>\n                  <ListItemText \n                    primary=\"No tasks yet. Add your first study task above!\"\n                    sx={{ textAlign: 'center', color: 'text.secondary' }}\n                  />\n                </ListItem>\n              )}\n            </List>\n          </Paper>\n        </Container>\n\n        <Dialog open={showTimerDialog} onClose={() => setShowTimerDialog(false)}>\n          <DialogTitle>Study Timer</DialogTitle>\n          <DialogContent>\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: 2 }}>\n              <CircularProgress\n                variant=\"determinate\"\n                value={(timer / (timerMinutes * 60)) * 100}\n                size={120}\n                thickness={4}\n              />\n              <Typography variant=\"h3\" sx={{ mt: 2 }}>\n                {formatTime(timer)}\n              </Typography>\n              <TextField\n                type=\"number\"\n                label=\"Minutes\"\n                value={timerMinutes}\n                onChange={(e) => setTimerMinutes(Number(e.target.value))}\n                sx={{ mt: 2 }}\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setShowTimerDialog(false)}>Cancel</Button>\n            <Button \n              variant=\"contained\" \n              onClick={startTimer}\n              disabled={isTimerRunning}\n            >\n              {isTimerRunning ? 'Running...' : 'Start Timer'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}