{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const auth = {\n  register: (username, email, password) => api.post('/register', {\n    username,\n    email,\n    password\n  }),\n  login: (username, password) => api.post('/login', {\n    username,\n    password\n  })\n};\nexport const tasks = {\n  getAll: () => api.get('/tasks'),\n  create: task => api.post('/tasks', task),\n  update: (id, task) => api.put(`/tasks/${id}`, task),\n  delete: id => api.delete(`/tasks/${id}`)\n};\nexport const user = {\n  getProfile: () => api.get('/user/profile')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","auth","register","username","email","password","post","login","tasks","getAll","get","task","update","id","put","delete","user","getProfile"],"sources":["/Users/leearthur/VScode/mmm/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const auth = {\n  register: (username, email, password) =>\n    api.post('/register', { username, email, password }),\n  \n  login: (username, password) =>\n    api.post('/login', { username, password }),\n};\n\nexport const tasks = {\n  getAll: () => api.get('/tasks'),\n  create: (task) => api.post('/tasks', task),\n  update: (id, task) => api.put(`/tasks/${id}`, task),\n  delete: (id) => api.delete(`/tasks/${id}`),\n};\n\nexport const user = {\n  getProfile: () => api.get('/user/profile'),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,IAAI,GAAG;EAClBC,QAAQ,EAAEA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAClChB,GAAG,CAACiB,IAAI,CAAC,WAAW,EAAE;IAAEH,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtDE,KAAK,EAAEA,CAACJ,QAAQ,EAAEE,QAAQ,KACxBhB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;IAAEH,QAAQ;IAAEE;EAAS,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG;EACnBC,MAAM,EAAEA,CAAA,KAAMpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,CAAC;EAC/BpB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAEK,IAAI,CAAC;EAC1CC,MAAM,EAAEA,CAACC,EAAE,EAAEF,IAAI,KAAKtB,GAAG,CAACyB,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEF,IAAI,CAAC;EACnDI,MAAM,EAAGF,EAAE,IAAKxB,GAAG,CAAC0B,MAAM,CAAC,UAAUF,EAAE,EAAE;AAC3C,CAAC;AAED,OAAO,MAAMG,IAAI,GAAG;EAClBC,UAAU,EAAEA,CAAA,KAAM5B,GAAG,CAACqB,GAAG,CAAC,eAAe;AAC3C,CAAC;AAED,eAAerB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}