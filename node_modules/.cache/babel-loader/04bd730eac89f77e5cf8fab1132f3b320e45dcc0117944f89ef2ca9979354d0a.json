{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 422) {\n    console.error('Token validation failed:', error.response.data);\n  }\n  return Promise.reject(error);\n});\nexport const auth = {\n  register: (username, email, password) => api.post('/register', {\n    username,\n    email,\n    password\n  }),\n  login: (username, password) => api.post('/login', {\n    username,\n    password\n  })\n};\nexport const tasks = {\n  getAll: () => api.get('/tasks'),\n  create: task => api.post('/tasks', task),\n  update: (id, task) => api.put(`/tasks/${id}`, task),\n  delete: id => api.delete(`/tasks/${id}`)\n};\nexport const user = {\n  getProfile: () => api.get('/user/profile')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","status","removeItem","window","location","href","console","data","Promise","reject","auth","register","username","email","password","post","login","tasks","getAll","get","task","update","id","put","delete","user","getProfile"],"sources":["/Users/leearthur/VScode/mmm/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle response errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/';\n    }\n    if (error.response?.status === 422) {\n      console.error('Token validation failed:', error.response.data);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const auth = {\n  register: (username, email, password) =>\n    api.post('/register', { username, email, password }),\n  \n  login: (username, password) =>\n    api.post('/login', { username, password }),\n};\n\nexport const tasks = {\n  getAll: () => api.get('/tasks'),\n  create: (task) => api.post('/tasks', task),\n  update: (id, task) => api.put(`/tasks/${id}`, task),\n  delete: (id) => api.delete(`/tasks/${id}`),\n};\n\nexport const user = {\n  getProfile: () => api.get('/user/profile'),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACT,IAAI,EAAAD,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClC;IACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B;EACA,IAAI,EAAAL,gBAAA,GAAAF,KAAK,CAACD,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCK,OAAO,CAACR,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACD,QAAQ,CAACU,IAAI,CAAC;EAChE;EACA,OAAOC,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMY,IAAI,GAAG;EAClBC,QAAQ,EAAEA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAClC7B,GAAG,CAAC8B,IAAI,CAAC,WAAW,EAAE;IAAEH,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtDE,KAAK,EAAEA,CAACJ,QAAQ,EAAEE,QAAQ,KACxB7B,GAAG,CAAC8B,IAAI,CAAC,QAAQ,EAAE;IAAEH,QAAQ;IAAEE;EAAS,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG;EACnBC,MAAM,EAAEA,CAAA,KAAMjC,GAAG,CAACkC,GAAG,CAAC,QAAQ,CAAC;EAC/BjC,MAAM,EAAGkC,IAAI,IAAKnC,GAAG,CAAC8B,IAAI,CAAC,QAAQ,EAAEK,IAAI,CAAC;EAC1CC,MAAM,EAAEA,CAACC,EAAE,EAAEF,IAAI,KAAKnC,GAAG,CAACsC,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEF,IAAI,CAAC;EACnDI,MAAM,EAAGF,EAAE,IAAKrC,GAAG,CAACuC,MAAM,CAAC,UAAUF,EAAE,EAAE;AAC3C,CAAC;AAED,OAAO,MAAMG,IAAI,GAAG;EAClBC,UAAU,EAAEA,CAAA,KAAMzC,GAAG,CAACkC,GAAG,CAAC,eAAe;AAC3C,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}